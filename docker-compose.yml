version: "3"
services:
  workspace:
    # Use Craft’s development PHP container:
    image: craftcms/cli:8.1-dev
    # Mount the workspace directory:
    volumes:
      - .:/app
    # Expose web container to the workspace to support forwarding:
    network_mode: service:web
    environment:
      # Override default shell (/bin/nologin) for www-data:
      - SHELL=/bin/sh
    # Run queue in the background (once Craft is installed):
    command: "until (php craft install/check); do sleep 1; done && php craft queue/listen --verbose"
    # Make sure the database is ready:
    depends_on:
      db:
        condition: service_healthy

  web:
    # This image runs PHP *and* an HTTP server:
    image: craftcms/nginx:8.1-dev
    volumes:
      - .:/app
    # Expose ports to the workspace component:
    ports:
      - 8080:8080

  db:
    # We're using MySQL, but you can replace it with Postgres if you want:
    image: mysql
    # NOTE: use of "mysql_native_password" is not recommended in production:
    # https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    ports:
      - 3306:3306
    volumes:
      # Persist in a predictable volume name:
      - db:/var/lib/mysql
    # Set credentials to match .env:
    environment:
      MYSQL_DATABASE: db
      MYSQL_USER: db
      MYSQL_PASSWORD: db
      MYSQL_ALLOW_EMPTY_PASSWORD: true
    # Let Docker know how to monitor the component’s health:
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 1s
      retries: 10

  ##
  # -> Add any other components you want!
  #    https://docs.github.com/en/codespaces
  #    https://docs.docker.com/compose/compose-file/
  ##

volumes:
  db:
